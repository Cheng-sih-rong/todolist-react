{"version":3,"sources":["components/Header.js","components/Button.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","Button","props","style","backgroundColor","type","content","List","prop","path","useLocation","pathname","btnDisplay","display","title","show","length","list","deleteItem","fuc","doneItem","map","item","onClick","key","itemLoop","App","useState","todoList","setTodoList","Input","inputVal","useRef","ref","value","current","Date","now","done","getInputValue","changeFun","filter","delete","doneList","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2e6b667.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\n\n\n\nfunction Header() {\n\n    return (\n        <div className=\"header flex-between\">\n            <h1>TodoList</h1>\n            <ul className=\"flex nav gap-20\">\n                <NavLink to=\"/undo\" >待辦項目</NavLink>\n                <NavLink to=\"/done\" >完成項目</NavLink>\n                <Redirect to=\"/undo\" />\n            </ul>\n\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n// import './Button.scss'\n\n\n\nfunction Button(props) {\n  const typeStyle = function () {\n    if (!props.type) return 'rgb(113, 95, 78)'\n    if (props.type === \"detele\") return 'red'\n\n  }\n\n  const style = {\n    backgroundColor: typeStyle()\n  }\n\n  return (\n    <div className=\"button\">\n      <button style={style} >{props.content}</button>\n    </div>\n  );\n}\n\nexport default Button;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Button from './Button';\n\n\nfunction List(prop) {\n\n    const location = useLocation()\n    const path = location.pathname\n\n\n    const btnDisplay = {\n        display: path === '/done' ? 'none' : 'flex'\n    }\n\n    const title = path === '/undo' ? '待辦' : '完成'\n\n\n    //項目\n\n    const itemLoop = function (list) {\n        const deleteItem = prop.fuc.deleteItem\n        const doneItem = prop.fuc.doneItem\n\n        return list.map((item) => {\n            return (<div key={item.key}>\n                <div className=\"flex item-wrap\">\n                    <p>{item.content}</p>\n                    <div className=\"flex center gap-10\">\n                        <div onClick={() => deleteItem(item.key)}><Button content=\"刪除\" type=\"detele\" /></div>\n                        <div style={btnDisplay} onClick={() => doneItem(item.key)}><Button content=\"完成\" /></div>\n                    </div>\n\n                </div>\n                <hr />\n            </div>)\n        })\n    }\n\n\n    return (\n        <div className=\"content-edit wrap\">\n            <div className=\"title\">\n                <h3>{title + '項目'}</h3>\n                {`(${prop.show.length > 0 ? `你有${prop.show.length}個${title}項目` : `目前無${title}項目`})`}\n            </div>\n            <div className=\"item\">\n                {itemLoop(prop.show)}\n            </div>\n\n        </div>\n    );\n}\n\nexport default List;\n","import React, { useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.scss';\nimport Header from './components/Header';\nimport Button from './components/Button';\nimport List from './components/List';\n\n\n/*元件App*/\nfunction App() {\n\n  //儲存資料內容\n  const [todoList, setTodoList] = useState([])\n\n  /*建立輸入元件input*/\n  function Input(prop) {\n\n    //預設useRef\n    const inputVal = useRef(null)\n\n    //=========將取得的值存入State的函式 開始=========\n    function getInputValue() {\n      //通過useRef取得input的值\n      const value = inputVal.current.value\n      //input裡是空的，不要儲存資料\n      if (inputVal.current.value === '') return\n      //存入state裡\n      else {\n        setTodoList([...todoList,\n        { key: Date.now(), content: value, done: false }\n        ])\n        //存入後清空input\n        inputVal.current.value = ''\n      }\n    }\n    //=========將取得的值存入State的函式 結束=========\n\n    return (\n      <div className=\"input flex\" >\n        <input type=\"text\" ref={inputVal} />\n        <div onClick={() => getInputValue()}>\n          <Button content=\"新增事項\" />\n        </div>\n      </div>\n    );\n  }\n  /*輸入元件input 結束*/\n\n\n  /*刪除項目function*/\n  const deleteItem = function (index) {\n    const list = todoList.filter((item) => item['key'] !== index)\n    setTodoList(list)\n  }\n\n  /*完成項目function*/\n  const doneItem = function (index) {\n    const list = todoList.map(function (item) { if (item['key'] === index) item['done'] = true; return item })\n    setTodoList(list)\n  }\n\n  //  待辦和未完成分別的list\n  function doneList(list) {\n    return list.filter((item => {\n      return item.done && !item.delete\n    }))\n  }\n\n\n  function undoList(list) {\n    return list.filter((item) => {\n      return !item.done && !item.delete\n    })\n  }\n\n\n  const location = useLocation()\n  const changeFun = location.pathname === '/undo' ? undoList(todoList) : doneList(todoList)\n\n\n\n\n//把App元件頁面結構建立出來\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"container\">\n        <Input />\n        <div className=\"list-wrapper\">\n          <List show={changeFun} fuc={{ deleteItem, doneItem }} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}